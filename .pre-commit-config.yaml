# Pre-commit configuration for Python 3.11+ Salesforce AI Colleague
# Enforces modern Python standards and best practices

repos:
  # Built-in hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: ['--django']
      - id: requirements-txt-fixer

  # Python 3.11+ compatibility and modern syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: ['--py311-plus']
        name: "Upgrade to Python 3.11+ syntax"

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: ['--target-version', 'py311']

  # Modern linting with Ruff (faster than flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        name: "Ruff linter"
      - id: ruff-format
        name: "Ruff formatter"

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: 
          - pydantic>=2.5.0
          - types-requests
          - types-setuptools
        args: [--python-version=3.11]
        exclude: ^(tests/|docs/)

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  # Documentation and docstrings
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ["--convention=google"]
        additional_dependencies: ["tomli"]

  # Check for Python 2/3 compatibility issues
  - repo: https://github.com/asottile/dead
    rev: v1.5.2
    hooks:
      - id: dead
        name: "Dead code detection"

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [yaml]
        exclude: ^(.github/|docs/)

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: python-check-blanket-noqa
        name: Check for blanket noqa
        entry: '(?i)# noqa(?!: [A-Z]+[0-9]*)'
        language: pygrep
        types: [python]
        
      - id: python-check-blanket-type-ignore
        name: Check for blanket type ignores
        entry: '# type: ignore(?!\[)'
        language: pygrep
        types: [python]
        
      - id: python-use-type-annotations
        name: Enforce type annotations
        entry: '^\s*def [a-zA-Z_][a-zA-Z0-9_]*\([^)]*\):'
        language: pygrep
        types: [python]
        exclude: ^(tests/|__init__.py)
        
      - id: python-check-future-imports
        name: Check for __future__ imports in main files
        entry: 'from __future__ import annotations'
        language: pygrep
        types: [python]
        files: ^src/
        pass_filenames: false
        args: [--invert-match]
        exclude: ^(tests/|__init__.py)

# Configuration for individual tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false 