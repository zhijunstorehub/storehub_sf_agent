# ===================================================================
# SALESFORCE AI COLLEAGUE - ENVIRONMENT CONFIGURATION TEMPLATE
# ===================================================================
# Copy this file to .env and fill in your actual values
# All variables marked as REQUIRED must be set for the application to work

# ===================================================================
# SALESFORCE CONFIGURATION
# ===================================================================
# Salesforce org credentials for metadata extraction
SALESFORCE_USERNAME=your_username@company.com.sandbox
SALESFORCE_PASSWORD=your_password
SALESFORCE_SECURITY_TOKEN=your_security_token
SALESFORCE_DOMAIN=test  # Use "test" for sandbox, "login" for production
SALESFORCE_API_VERSION=59.0

# Optional: Salesforce org alias for CLI operations
SALESFORCE_ORG_ALIAS=sandbox

# ===================================================================
# SUPABASE CONFIGURATION (Cloud Database)
# ===================================================================
# REQUIRED: Get these from your Supabase project dashboard > Settings > API
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ===================================================================
# AI/LLM CONFIGURATION
# ===================================================================
# REQUIRED: Google Gemini API key for field analysis
# Get from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=AIzaSyC...your_gemini_api_key

# Optional: OpenAI API key for semantic search (future feature)
OPENAI_API_KEY=sk-...your_openai_api_key

# ===================================================================
# DATABASE CONFIGURATION (Local SQLite - fallback)
# ===================================================================
# Path to local SQLite database (used when Supabase is not available)
DATABASE_PATH=data/salesforce_metadata.db

# ===================================================================
# PROCESSING CONFIGURATION
# ===================================================================
# RAG Configuration for document processing
CHROMA_DB_PATH=./data/chroma_db
CHUNK_SIZE=1000
CHUNK_OVERLAP=200
MAX_RETRIEVAL_DOCS=5

# Batch processing settings
BATCH_PROCESSING_SIZE=10
MAX_DEPENDENCY_DEPTH=5

# Semantic analysis settings
SEMANTIC_CHUNK_SIZE=4000
SEMANTIC_OVERLAP=200
MAX_TOKENS_PER_REQUEST=8000

# ===================================================================
# APPLICATION SETTINGS
# ===================================================================
# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# File processing directories
FLOWS_DIRECTORY=salesforce_metadata/flows
METADATA_OUTPUT_DIRECTORY=output/metadata
TEMP_DIRECTORY=temp

# ===================================================================
# OPTIONAL: NEO4J GRAPH DATABASE CONFIGURATION
# ===================================================================
# Uncomment and configure if using Neo4j for graph analysis
# NEO4J_URI=neo4j://localhost:7687
# NEO4J_USERNAME=neo4j
# NEO4J_PASSWORD=your_neo4j_password
# NEO4J_DATABASE=neo4j
# AURA_INSTANCEID=your_aura_instance_id
# AURA_INSTANCENAME=your_aura_instance_name

# ===================================================================
# DEVELOPMENT SETTINGS
# ===================================================================
# Enable advanced features (set to true/false)
ENABLE_CROSS_COMPONENT_ANALYSIS=true
ENABLE_IMPACT_ASSESSMENT=true
ENABLE_MULTI_ORG_SUPPORT=false

# ===================================================================
# QUICK START GUIDE
# ===================================================================
# 1. REQUIRED for basic functionality:
#    - SUPABASE_URL, SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY
#    - GOOGLE_API_KEY
#
# 2. OPTIONAL for Salesforce integration:
#    - SALESFORCE_* variables (needed for live data extraction)
#
# 3. OPTIONAL for enhanced features:
#    - OPENAI_API_KEY (semantic search)
#    - NEO4J_* variables (graph analysis)
#
# 4. Start servers:
#    - Backend: python3 server.py
#    - Frontend: cd frontend && npm run dev
# =================================================================== 